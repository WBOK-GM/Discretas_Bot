# Este archivo contiene la configuración final y correcta para Traefik y FastAPI.
services:
  traefik:
    image: "traefik:v3.1"
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app-network

  rabbitmq:
    image: "rabbitmq:3.13-management"
    hostname: "rabbitmq"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=PathPrefix(`/rabbitmq`)"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"

  api:
    build:
      context: ./api
    container_name: drive-api
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./api:/app
    depends_on:
      - rabbitmq
    networks:
      - app-network
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wai-api.rule=PathPrefix(`/api`)"
      # --- ¡LA CORRECCIÓN MÁGICA! ---
      # 1. Creamos un "middleware" que sabe cómo quitar el prefijo /api.
      - "traefik.http.middlewares.strip-api-prefix.stripprefix.prefixes=/api"
      # 2. Le decimos al router que use ese middleware.
      - "traefik.http.routers.wai-api.middlewares=strip-api-prefix"
      - "traefik.http.services.wai-api.loadbalancer.server.port=8000"

  worker:
    build:
      context: ./worker
    container_name: drive-worker
    command: python3 main.py
    volumes:
      - ./worker:/app
      - ./shared:/app/shared
    depends_on:
      - rabbitmq
    networks:
      - app-network
    env_file:
      - .env
    restart: on-failure

networks:
  app-network:
    driver: bridge